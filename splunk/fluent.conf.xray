<source>
  @type tail
  @id xray_server_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-server-service.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-server-service.log.pos"
  tag jfrog.xray.server.service
  <parse>
    @type none
  </parse>
</source>
<source>
  @type tail
  @id xray_persist_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-persist-service.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-persist-service.log.pos"
  tag jfrog.xray.persist.service
  <parse>
    @type none
  </parse>
</source>
<source>
  @type tail
  @id xray_indexer_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-indexer-service.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-indexer-service.log.pos"
  tag jfrog.xray.indexer.service
  <parse>
    @type none
  </parse>
</source>
<source>
  @type tail
  @id xray_analysis_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-analysis-service.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-analysis-service.log.pos"
  tag jfrog.xray.analysis.service
  <parse>
    @type none
  </parse>
</source>
<source>
  @type tail
  @id xray_router_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-service.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-service.log.pos"
  tag jfrog.xray.router.service
  <parse>
    @type none
  </parse>
</source>
<source>
  @type tail
  @id xray_router_traefik_tail
  path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-traefik.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-traefik.log.pos"
  tag jfrog.xray.router.traefik
  <parse>
      @type regexp
      expression ^(?<timestamp>[^ ]*) \[(?<service_type>[^\]]*)\] \[(?<log_level>[^\]]*)\] \[(?<trace_id>[^\]]*)\] \[(?<class_line_number>.*)\] \[(?<thread>.*)\] -(?<message>.+)$
      time_key timestamp
      time_format %Y-%m-%dT%H:%M:%S.%LZ
  </parse>
</source>
<source>
  @type tail
  @id xray_router_request_tail
  path  "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-request.log"
  pos_file "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/router-request.log.pos"
  tag jfrog.xray.router.request
  <parse>
    @type json
    time_key time
    time_format %Y-%m-%dT%H:%M:%S%:z
  </parse>
</source>
<source>
  @type tail
  @id xray_request_tail
  path  "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-request.log"
  pos_file  "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/xray-request.log.pos"
  tag jfrog.xray.xray.request
  <parse>
    @type regexp
    expression ^(?<timestamp>[^ ]*)\|(?<trace_id>[^ ]*)\|(?<remote_address>[^|]++)\|(?<username>[^\|]*)\|(?<request_method>[^\|]*)\|(?<request_url>[^\|]*)\|(?<return_status>[^\|]*)\|(?<response_content_length>[^\|]*)\|(?<request_duration>.*)$
    time_key timestamp
    time_format %Y-%m-%dT%H:%M:%S.%LZ
  </parse>
</source>
<filter jfrog.xray.**.service>
  @type record_transformer
  enable_ruby true
  <record>
    message ${record["message"].gsub(/\e\[([;\d]+)?m/, '')}
  </record>
</filter>
<filter jfrog.xray.**.service>
  @type parser
  key_name message
  <parse>
      @type multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<timestamp>[^ ]*) \[(?<service_type>[^\]]*)\] \[(?<log_level>[^\]]*)\] \[(?<trace_id>[^\]]*)\] \[(?<class_line_number>.*)\] \[(?<thread>.*)\] (?<message>.*)$/
      time_key timestamp
      time_format %Y-%m-%dT%H:%M:%S.%LZ
  </parse>
</filter>
<filter jfrog.**>
  @type record_transformer
  <record>
    hostname "#{Socket.gethostname}"
    log_source ${tag}
  </record>
</filter>

<source>
  @type jfrog_siem
  tag jfrog.xray.siem.vulnerabilities
  jpd_url JPD_URL
  username USER
  apikey JFROG_API_KEY
  pos_file_path "#{ENV['JF_PRODUCT_DATA_INTERNAL']}/log/jfrog_siem.log.pos"
</source>
<filter jfrog.xray.siem.*>
  @type record_transformer
  enable_ruby true
  <record>
    log_source "jfrog.xray.siem.vulnerabilities"
    category ${record["type"]}
    url ${record["violation_details_url"]}
    signature ${record["watch_name"]}
    cvss ${record["cvss_score"]}
    cve ${record["cve"]}
    vendor_product "Xray"
  </record>
</filter>
<filter jfrog.xray.siem.*>
  @type record_modifier
  <record>
    _impacted_artifacts_url_ ${if record.has_key?('impacted_artifacts_url'); record.delete('impacted_artifacts_url') ; end; nil}
    _type_ ${if record.has_key?('type'); record.delete('type') ; end; nil}
    _watch_name_ ${if record.has_key?('watch_name'); record.delete('watch_name') ; end; nil}
    _violation_details_url_ ${if record.has_key?('violation_details_url'); record.delete('violation_details_url') ; end; nil}
    _cvss_score_ ${if record.has_key?('cvss_score'); record.delete('cvss_score') ; end; nil}
    _cvss_version_ ${if record.has_key?('cvss_version'); record.delete('cvss_version') ; end; nil}
  </record>
  remove_keys _impacted_artifacts_url_, _type_, _watch_name_, _violation_details_url_, _cvss_score_, _cvss_version_
</filter>

<source>
  @type jfrog_metrics
  @id metrics_http_jfxr
  tag jfrog.metrics.xray
  interval 5s
  metric_prefix 'jfrog.xray'
  jpd_url JPD_URL
  username ADMIN_USERNAME
  apikey API_KEY
</source>

####################
# SPLUNK OUTPUT
####################

<match jfrog.metrics.**>
      @type splunk_hec
      data_type metric
      hec_host HEC_HOST
      hec_port HEC_PORT
      hec_token METRICS_HEC_TOKEN
      flush_interval 5s
      source ${tag}
      index jfrog_splunk_metrics
      metric_name_key metric_name
      metric_value_key value
      <fields>
      </fields>
</match>

<match jfrog.**>
  @type splunk_hec
  host HEC_HOST
  port HEC_PORT
  token HEC_TOKEN
  index jfrog_splunk
  format json
  sourcetype_key log_source
  use_fluentd_time false
  # buffered output parameter
  flush_interval 10s
  # ssl parameter
  #use_ssl true
  #ca_file /path/to/ca.pem
</match>